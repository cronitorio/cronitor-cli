name: "Run CronitorCLI tests"

on:
  - push

jobs:
  windows-tests:
    name: Run Windows tests
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - uses: actions/setup-go@v3

      # Prefer MSYS2 bash to git bash
      - name:  "add-path"
        shell: cmd
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run:   |
          echo ::add-path::C:\msys64\usr\bin
          dir C:\msys64\usr\bin

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install web dependencies
        shell: bash
        run: |
          cd web
          npm install

      - name: Build web assets
        shell: bash
        run: |
          cd web
          mkdir -p static
          npm run build

      - name: Setup BATS
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.7.0

      - name: Build binary
        shell: bash
        run: go build -o cronitor main.go

      - name: Verify binary and debug setup
        shell: bash
        run: |
          ls -la cronitor
          echo "API Key length: ${#CRONITOR_API_KEY}"
          echo "Testing cronitor configure..."
          ./cronitor configure --help || echo "Configure help failed"
          
      - name: Run tests
        working-directory: tests
        shell: bash
        env:
          CRONITOR_API_KEY: "${{ secrets.CRONITOR_API_KEY }}"
          WINDOWS: 'true'
        run: |
          echo "::add-mask::cb54ac4fd16142469f2d84fc1bbebd84"
          echo "::add-mask::$CRONITOR_API_KEY"
          export BATS_PATH="$(which bats)"
          $BATS_PATH *.bats


  linux-tests:
    name: Run Linux tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-go@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install web dependencies
        run: |
          cd web
          npm install

      - name: Build web assets
        run: |
          cd web
          mkdir -p static
          npm run build

      - name: Setup BATS
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.7.0

      - name: Build binary
        run: go build -o cronitor main.go

      - name: Verify binary and debug setup
        run: |
          ls -la cronitor
          echo "API Key length: ${#CRONITOR_API_KEY}"
          echo "Testing cronitor configure..."
          ./cronitor configure --help || echo "Configure help failed"
          
      - name: Run tests
        working-directory: tests
        env:
          CRONITOR_API_KEY: "${{ secrets.CRONITOR_API_KEY }}"
          WINDOWS: 'false'
        run: |
          echo "::add-mask::cb54ac4fd16142469f2d84fc1bbebd84"
          echo "::add-mask::$CRONITOR_API_KEY"
          export BATS_PATH="$(which bats)"
          sudo -E -n -- $BATS_PATH *.bats
